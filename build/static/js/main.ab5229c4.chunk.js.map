{"version":3,"sources":["components/Container/Container.js","components/Navigation/Navigation.js","components/AuthNav/AuthNav.js","components/LogoutBtn/LogoutBtn.js","components/AppBar/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","redux/contacts/contacts-reducer.js","redux/auth/auth-slice.js","redux/store.js","index.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","components/Navigation/Navigation.module.css","components/AuthNav/AuthNav.module.css","components/LogoutBtn/LogoutBtn.module.css","components/Container/Container.module.css","components/AppBar/AppBar.module.css","redux/contacts/contacts-actions.js"],"names":["Container","children","className","s","container","Navigation","nav","exact","to","link","activeClassName","activeLink","AuthNav","wrap","LogoutBtn","name","useSelector","authSelectors","getUsername","dispatch","useDispatch","btn","type","onClick","authOperations","logOut","AppBar","isLoggedIn","getIsLoggedIn","header","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","HomePage","lazy","ContactsPage","Registration","Login","App","useEffect","fetchCurrentUser","fallback","color","height","width","position","top","left","transform","path","items","createReducer","actions","state","payload","filter","item","id","loading","_","error","combineReducers","authSlice","createSlice","initialState","user","email","password","token","extraReducers","register","fulfilled","action","logIn","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactReducer","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById","axios","defaults","baseURL","headers","common","Authorization","createAsyncThunk","credentials","a","rejectWithValue","post","data","response","status","toast","message","thunkAPI","getState","persistedToken","get","module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter"],"mappings":"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","file":"static/js/main.ab5229c4.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport s from \"./Container.module.css\";\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;","import { NavLink } from 'react-router-dom';\r\nimport s from './Navigation.module.css';\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <nav className={ s.nav}>\r\n            <NavLink exact to=\"/\" className={s.link} activeClassName={s.activeLink}>Phonebook</NavLink>\r\n            <NavLink to=\"/contacts\" className={s.link} activeClassName={s.activeLink}>Contacts</NavLink>\r\n            </nav>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import { NavLink } from \"react-router-dom\";\r\nimport s from './AuthNav.module.css';\r\n\r\nconst AuthNav = () => {\r\n    return (\r\n      <div className={ s.wrap}>\r\n      <NavLink\r\n        to=\"/register\"\r\n        exact\r\n        className={s.link}\r\n        activeClassName={s.activeLink}\r\n      >\r\n        Registration\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/login\"\r\n        exact\r\n        className={s.link}\r\n        activeClassName={s.activeLink}\r\n      >\r\n        Login\r\n      </NavLink>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default AuthNav;","import s from './LogoutBtn.module.css';\r\nimport authOperations from 'redux/auth/auth-operations';\r\nimport authSelectors from 'redux/auth/auth-selectors';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n\r\n\r\nconst LogoutBtn = () => {\r\n  const name = useSelector(authSelectors.getUsername);\r\n  const dispatch = useDispatch();\r\n    return (\r\n            <div className={s.container}>\r\n        <p className={s.name}>Welcome, { name}</p>\r\n        <button className={s.btn} type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\r\n        Logout\r\n      </button>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default LogoutBtn;","import s from './AppBar.module.css';\r\nimport { useSelector } from 'react-redux';\r\nimport Navigation from 'components/Navigation';\r\nimport AuthNav from 'components/AuthNav';\r\nimport LogoutBtn from 'components/LogoutBtn';\r\nimport authSelectors from 'redux/auth/auth-selectors';\r\n\r\nconst AppBar = () => {\r\n    const isLoggedIn = useSelector(authSelectors.getIsLoggedIn)\r\n    return (\r\n      <header className={s.header}>\r\n            <Navigation />\r\n            {isLoggedIn ? <LogoutBtn /> :  <AuthNav />} \r\n            \r\n           \r\n          \r\n    </header>\r\n    )\r\n}\r\n\r\nexport default AppBar;\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport authSelectors from 'redux/auth/auth-selectors';\r\n\r\n/**\r\n * 1. Он должен повторять API Route\r\n *  2. Он должен рендерить Route\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на redirectTo\r\n */\r\n\r\nexport default function PrivateRoute({\r\n  children,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport authSelectors from 'redux/auth/auth-selectors';\r\n\r\n\r\nexport default function PublicRoute({\r\n  children,\r\n  restricted = false,\r\n  redirectTo = '/',\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n}","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { useEffect, Suspense, lazy } from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport authOperations from 'redux/auth/auth-operations';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport Container from 'components/Container';\r\nimport AppBar from 'components/AppBar';\r\n\r\nimport PrivateRoute from 'components/PrivateRoute';\r\nimport PublicRoute from 'components/PublicRoute';\r\nimport Loader from \"react-loader-spinner\";\r\n\r\n\r\n\r\nconst HomePage = lazy(() => import('./views/HomePage'));\r\nconst ContactsPage = lazy(() => import('./views/ContactsPage'));\r\nconst Registration = lazy(() => import('./views/Registration'));\r\nconst Login = lazy(() => import('./views/Login'));\r\n\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(authOperations.fetchCurrentUser())\r\n  }, [dispatch])\r\n    return (\r\n      <>\r\n        <Container>\r\n          <AppBar />\r\n          <Switch>\r\n            <Suspense fallback={<Loader type=\"TailSpin\" color=\"#00BFFF\" height={80} width={80} position=\"fixed\" top=\"50%\" left=\"50%\" transform=\"translate(-50%, -50%)\"/>}>\r\n              <PublicRoute exact path=\"/\">\r\n                <HomePage/>\r\n              </PublicRoute>\r\n              <PublicRoute exact path=\"/register\" restricted>\r\n                <Registration/>\r\n              </PublicRoute>\r\n              <PublicRoute exact path=\"/login\" redirectTo=\"/contacts\" restricted>\r\n                <Login/>\r\n              </PublicRoute>\r\n              <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\r\n                <ContactsPage/>\r\n              </PrivateRoute>\r\n            </Suspense>  \r\n          </Switch>\r\n        </Container>\r\n        \r\n         <ToastContainer />\r\n      </>\r\n    );\r\n  \r\n}\r\n\r\n\r\nexport default App;\r\n","import * as actions from './contacts-actions';\r\nimport { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nconst items = createReducer([], {\r\n    [actions.fetchContactSuccess]: (state, { payload }) => payload,\r\n    [actions.addContactSuccess]: (state, { payload}) => [...state, payload],\r\n    [actions.deleteContactSuccess]: (state, { payload }) => state.filter(item => item.id !== payload),\r\n    })\r\n\r\nconst loading = createReducer(false, {\r\n    [actions.fetchContactRequest]: () => true,\r\n    [actions.fetchContactSuccess]: () => false,\r\n    [actions.fetchContactError]: () => false,\r\n\r\n    [actions.addContactRequest]: () => true,\r\n    [actions.addContactSuccess]: () => false,\r\n    [actions.addContactError]: () => false,\r\n\r\n    [actions.deleteContactRequest]: () => true,\r\n    [actions.deleteContactSuccess]: () => false,\r\n    [actions.deleteContactError]: () => false,\r\n\r\n})\r\n\r\nconst filter = createReducer('', {\r\n    [actions.changeFilter]: (_, {payload}) => payload,\r\n})\r\n\r\nconst error = createReducer(null, {\r\n    [actions.fetchContactError]: (_, { payload }) => payload,\r\n    [actions.deleteContactError]:(_, { payload }) => payload,\r\n    [actions.addContactError]: (_, { payload }) => payload,\r\n\r\n})\r\nexport default combineReducers({ items, filter, loading, error });","import { createSlice } from '@reduxjs/toolkit';\r\nimport authOperations from './auth-operations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null, password: null},\r\n  token: null,\r\n    isLoggedIn: false,\r\n    error: null,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logOut.fulfilled](state, action) {\r\n      state.user = { name: null, email: null, password: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n      },\r\n    //   [authOperations.register.rejected](state, action) {\r\n    //       state.user.error = action.payload;\r\n    //   },\r\n    //   [authOperations.logIn.rejected](state, action) {\r\n    //       state.user.error = action.payload;\r\n    //   },\r\n    //   [authOperations.logOut.rejected](state, action) {\r\n    //       state.user.error = action.payload;\r\n    //   },\r\n    //   [authOperations.fetchCurrentUser.rejected](state, action) {\r\n    //       state.user.error = action.payload;\r\n    //   },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport contactReducer from './contacts/contacts-reducer';\r\nimport authReducer from './auth/auth-slice';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\n\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n      auth: persistReducer(authPersistConfig, authReducer),\r\n      contacts:  contactReducer,\r\n    },\r\n    middleware,\r\n})\r\n\r\nexport const persistor = persistStore(store);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { store, persistor } from './redux/store';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n      <BrowserRouter>\r\n         <App />\r\n      </BrowserRouter>\r\n      </PersistGate>  \r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\nconst register = createAsyncThunk('auth/register', async (credentials, { rejectWithValue}) => {\r\n  try {\r\n    const { data } = await axios.post('/users/signup', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n      if (error.response.status === 400) {\r\n          toast.error('This user is already exist') \r\n      }\r\n      if (error.response.status === 500) {\r\n          toast.error('Something went wrong. Try another time')\r\n      }\r\n     throw rejectWithValue(error.message);\r\n      \r\n  }\r\n});\r\n\r\n\r\nconst logIn = createAsyncThunk('auth/login', async (credentials, { rejectWithValue }) => {\r\n  try {\r\n    const { data } = await axios.post('/users/login', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n\r\n\r\n     if (error.response.status === 400) {\r\n                toast.error('Incorrect password or login')\r\n      }\r\n      throw rejectWithValue(error.message);\r\n  \r\n  }\r\n});\r\n\r\n\r\nconst logOut = createAsyncThunk('auth/logout', async (_, { rejectWithValue}) => {\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n  } catch (error) {\r\n      throw rejectWithValue(error.message);\r\n  }\r\n});\r\n\r\nconst fetchCurrentUser = createAsyncThunk(\r\n  'auth/refresh',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get('/users/current');\r\n      return data;\r\n    } catch (error) {\r\n        throw thunkAPI.rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nconst authOperations = {\r\n  register,\r\n  logOut,\r\n  logIn,\r\n  fetchCurrentUser,\r\n};\r\n\r\nexport default authOperations;","const getIsLoggedIn = state => state.auth.isLoggedIn;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\nconst authSelectors = {\r\n  getIsLoggedIn,\r\n  getUsername,\r\n};\r\n\r\nexport default authSelectors;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navigation_nav__aRA_s\",\"link\":\"Navigation_link__3dzhM\",\"activeLink\":\"Navigation_activeLink__29v1M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrap\":\"AuthNav_wrap__3mEvj\",\"link\":\"AuthNav_link__1kaYZ\",\"activeLink\":\"AuthNav_activeLink__2CxoC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LogoutBtn_container__37jbY\",\"name\":\"LogoutBtn_name__jxY9K\",\"btn\":\"LogoutBtn_btn__1ElPp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3mgxx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__lRRXS\"};","\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n\r\n\r\n"],"sourceRoot":""}